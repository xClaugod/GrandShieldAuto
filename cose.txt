services:
  fluentd:
    build:
        context: ./fluentd
        dockerfile: Dockerfile.fluentd
    ports:
      - "9884:9884"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    depends_on:
      - kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=PLAINTEXT://kafka:9092
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
      - kafka-ui
    entrypoint: [ '/bin/bash', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server PLAINTEXT://kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server PLAINTEXT://kafka:9092 --create --if-not-exists --topic locations --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server PLAINTEXT://kafka:9092 --list
      "

  redis-host:
    image: redis:6.2.6
    ports:
      - "6379:6379"
      
  spark-master:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=master
    ports:
      - "8082:8082"
      - "7077:7077"
    depends_on:
      - redis-host
  spark-worker:
    image: bitnami/spark:latest
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
  spark-submit:
    build:
      context: ./spark
      dockerfile: Dockerfile.spark
    depends_on:
      - spark-master
      - spark-worker
    volumes:
      - ./spark/script.py:/opt/spark-apps/script.py
