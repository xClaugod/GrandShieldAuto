services:
  fluentd:
    build:
        context: ./fluentd
        dockerfile: Dockerfile.fluentd
    ports:
      - "9884:9884"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    depends_on:
      - kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    entrypoint: [ '/bin/bash', '-c' ]
    command: |
      "
      kafka-topics --bootstrap-server PLAINTEXT://kafka:9092 --list
      kafka-topics --bootstrap-server PLAINTEXT://kafka:9092 --create --if-not-exists --topic locations --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server PLAINTEXT://kafka:9092 --list
      "
  redis-host:
    image: redis:latest
    ports:
      - "6379:6379"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    mem_limit: 1 GB
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200

  spark:
    build: 
      context : ./spark
      dockerfile: Dockerfile.spark
    depends_on:
      - kafka
      - redis-host
      - elasticsearch

    environment:
      - SPARK_MASTER_NAME=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2g
      - SPARK_DRIVER_MEMORY=2g
    ports:
      - "4040:4040"
      - "8082:8082"


  kibana:
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:8.13.4
    ports:
      - 5601:5601
    volumes:
      - ./kibana/config.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=PLAINTEXT://kafka:9092